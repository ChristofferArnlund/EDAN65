/*
aspect VarParamAddressing {
	eq Program.getChild().localIndex() = 0;
	inh int IdDecl.localIndex();

	inh boolean IdDecl.isFunctionParam();
	eq Program.getChild().isFunctionParam() = false;
	
	//localIndex & isFunctionParam for function params
	eq Func.getFuncParams(int index).localIndex() = index;
	eq Func.getFuncParams().isFunctionParam() = true;

	//Number of local vars in function
	syn int Func.numLocals() = 0;

	//Prevnode and lastNode for ASTNodes
	inh ASTNode ASTNode.prevNode();
	eq ASTNode.getChild(int index).prevNode() = prevNode(index);
	syn ASTNode ASTNode.prevNode(int index) = index > 0 ? getChild(index-1).lastNode() : this;
	syn ASTNode ASTNode.lastNode() = prevNode(getNumChild());
	
	//Indexing of local idDecl vars
	eq Func.getStmtBlock().localIndex() = 0; //start counting at zero
	syn int Stmt.localIndex() = prevNode().localIndex();
	eq IdDecl.localIndex() = prevNode().localIndex() + 1;

	syn String IdDecl.address() {
		if(isFunctionParam()) {
			//+2 because of old base pointer and return address
			return ((localIndex() + 2)*8)+"(%rbp)";
		} else {
			return "";
		}
	}
}*/
