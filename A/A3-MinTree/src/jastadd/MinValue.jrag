aspect MinValue {
	// Exercise 1
	syn int Node.localMin() = 0;
	eq Leaf.localMin() = getNumber();
	eq Pair.localMin() {
		int min = getLeft().localMin();
		if(getRight().localMin() < min){
			min = getRight().localMin();
		}
		return min;
	}

	// Exercise 2
	inh int Node.globalMin();
	eq Program.getNode().globalMin() = getNode().localMin();

	// Exercise 3
	syn boolean Leaf.isMinValue() {
		return getNumber() == globalMin();
	}
	
	// Exercise 4
	syn int Program.nbrOfMinValues() = getNode().nbrOfMinValues();
	syn int Node.nbrOfMinValues() = 0;
	eq Leaf.nbrOfMinValues() {
		if(isMinValue()){
			return 1;
		} else {
			return 0;
		}
	}
	eq Pair.nbrOfMinValues() {
		return getLeft().nbrOfMinValues() + getRight().nbrOfMinValues();
	}
	
}
