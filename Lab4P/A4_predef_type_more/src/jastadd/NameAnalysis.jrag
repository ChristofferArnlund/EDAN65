/**
	Name analysis for SimpliC. In the instructions it is stated that
	* Declare before use will now only apply for variables:
		Will be checked since StmtBlock only looks before use
		Functions will be found in Program.lookup where the
		entire program is searched.
	* both variables and functions share the same name space are the same as in assignment 3
**/
aspect NameAnalysis {
	//Eq for computation of decl attribute in IdUse, lookup is inherited.
	syn IdDecl IdUse.decl() = lookup(getID()); 
	inh IdDecl IdUse.lookup(String name); 
	
	//isVar and isFunc for IdDecl inherited
	inh boolean IdDecl.isFunction();
	inh boolean IdDecl.isVariable();
	eq Func.getFuncName().isFunction() = true;
	eq Func.getFuncName().isVariable() = false;
	eq IdDeclStmt.getIdDecl().isVariable() = true;
	eq IdDeclStmt.getIdDecl().isFunction() = false;

	inh IdDecl IdDecl.lookup(String name); 
	syn boolean IdDecl.isMultiplyDeclared() {
		IdDecl decl = lookup(getID());
		return !decl.isUnknown() ? decl != this : false;
	}

	//StmtBlock tells its statements that if you dont know
	//how to find the IdDecl then ask me!Declare before use will now only apply for variables
	eq StmtBlock.getStmt(int index).lookup(String name) {
		IdDecl idDecl = localLookup(name, index);
		return !idDecl.isUnknown() ? idDecl : lookup(name); 
	}

	// Scanning stmtblock 
	syn IdDecl StmtBlock.localLookup(String name, int until) {
		for(int i = 0; i <= until; i++) {
			Stmt stmt = getStmt(i);
			IdDecl idDecl = stmt.localLookup(name); //Do not ask up
			if(!idDecl.isUnknown()) 
				return idDecl;
		}
		return unknownDecl();
	}

	//StmtBlock inherits lookup from parent(nested blocks or function)
	inh IdDecl StmtBlock.lookup(String name);

	//IdDeclStmt(var) may declare something of use
	syn IdDecl IdDeclStmt.localLookup(String name) {
 		return getIdDecl().getID().equals(name) ? getIdDecl() : unknownDecl();
	}

	//Scanning function for params matching name
	eq Func.getStmtBlock().lookup(String name) {
		for(int i = 0; i < getNumFuncParams(); i++) {
			IdDecl decl = getFuncParams(i).getIdDecl();
			if(decl.getID().equals(name))
				return decl;
		}
		return lookup(name);
	}

	//Inherit lookup method from program
	inh IdDecl Func.lookup(String name);

	//lookup for the children of Program(Funcs)
	//First checks if the name is one of the predefinedFunctions.
	eq Program.getChild().lookup(String name) {
		for(Func func : predefinedFunctions()) //Look for our predefined functions
			if(func.getFuncName().getID().equals(name))
				return func.getFuncName();
		return localLookup(name);
	}

	//LocalLookup for Program checks if the name is one
	//of the userdefined functions
	syn IdDecl Program.localLookup(String name) {
		for(int i = 0; i < getNumFunc(); i++) {
			IdDecl funcName = getFunc(i).getFuncName();			
			if(funcName.getID().equals(name))
				return funcName; 
		}
		return unknownDecl();
	}

	//Fallback if statement does not declare something visible outside
	syn IdDecl Stmt.localLookup(String name) = unknownDecl();

}
